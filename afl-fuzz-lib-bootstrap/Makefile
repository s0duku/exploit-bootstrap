

# https://github.com/AFLplusplus/AFLplusplus/blob/stable/docs/env_variables.md
# https://github.com/AFLplusplus/AFLplusplus/tree/stable/utils/persistent_mode
# https://github.com/AFLplusplus/AFLplusplus/blob/stable/qemu_mode/README.md


# user need to set target library, and target fuzz function, and buf size use to read data
FUZZ_LIB_NAME = libvuln.so
FUZZ_LIB_FUNC_NAME = vuln_func
FUZZ_INPUT_BUF_SIZE = 0x100000

FUZZ_ARCH = x86

FUZZ_LIB_LDPATH = $(shell pwd)/lib/$(FUZZ_ARCH):$(LD_LIBRARY_PATH)
FUZZ_LIB_PATH = $(shell pwd)/target/$(FUZZ_ARCH)/$(FUZZ_LIB_NAME)
FUZZ_QEMU_PATH = $(shell pwd)/qemu/$(FUZZ_ARCH)/afl-qemu-trace

# replace default qemu

_ = $(shell cp $(FUZZ_QEMU_PATH) $(shell which afl-qemu-trace))

FUZZ_LOG_PATH = '"/tmp/afl-fuzz-lib-bootstrap.log"'

ifeq ($(FUZZ_ARCH),x86)
	CFLAG_ARCH = -m32 -DFUZZ_ARCH_X86
endif
ifeq ($(FUZZ_ARCH),x64)
	CFLAG_ARCH = -m64 -DFUZZ_ARCH_X64
endif


CFLAGS = $(CFLAG_ARCH) -Wl,--no-as-needed -ldl -no-pie -DFUZZ_INPUT_BUF_SIZE=$(FUZZ_INPUT_BUF_SIZE) -DFUZZ_LOG_PATH=$(FUZZ_LOG_PATH)

HARNESS_SRC = harness.c
HARNESS = harness

HOOK_SRC = hook.c
HOOK = libhook.so

AFL_INPUTS = $(shell pwd)/inputs
AFL_OUTPUTS = $(shell pwd)/outputs
AFL_PRELOAD = $(shell pwd)/lib/$(FUZZ_ARCH)/$(HOOK)

# AFL_QEMU_PERSISTENT_ADDR = 0x4000000000
AFL_QEMU_PERSISTENT_CNT = 5000
AFL_QEMU_PERSISTENT_GPR = 1
AFL_QEMU_PERSISTENT_MEM = 1
AFL_QEMU_PERSISTENT_EXITS = 1
# AFL_QEMU_INST_RANGES = $(FUZZ_LIB_NAME)
AFL_INST_LIBS = 1

help: 
	@echo "Usage: make [OPTIONS]"
	@echo "  TARGETS:"
	@echo "    fuzz      Compile harness and run afl++."
	@echo "    clean     Clean all outputs"
	@echo "    help      Show this help."
	@echo "    test      Run harness tests."
	@echo "    start     Run afl++, but do not recompile harness."
	@echo "	   gdb       Run harness with gdb."
	@echo "    dry       Run harness directly."
	@echo ""
	
# makefile every line fork a new shell, so env will not work
# fuzz target with afl, by default, use persistent mode
# direct read inputs from stdin
fuzz: hook compile
	@echo " "
	@export AFL_QEMU_PERSISTENT_CNT=$(AFL_QEMU_PERSISTENT_CNT); \
	export AFL_QEMU_PERSISTENT_ADDR=$(shell nm $(HARNESS) | grep 'T call_fuzz_func' | awk '{print"0x"$$1}'); \
	export AFL_QEMU_PERSISTENT_GPR=$(AFL_QEMU_PERSISTENT_GPR); \
	export AFL_QEMU_PERSISTENT_MEM=$(AFL_QEMU_PERSISTENT_MEM); \
	export AFL_QEMU_PERSISTENT_EXITS=$(AFL_QEMU_PERSISTENT_EXITS); \
	export AFL_PRELOAD=$(AFL_PRELOAD); \
	export AFL_INST_LIBS=$(AFL_INST_LIBS); \
	export LD_LIBRARY_PATH=$(FUZZ_LIB_LDPATH); \
	export FUZZ_LIB_PATH=$(FUZZ_LIB_PATH); \
	export FUZZ_LIB_FUNC_NAME=$(FUZZ_LIB_FUNC_NAME); \
	afl-fuzz -i $(AFL_INPUTS) -o $(AFL_OUTPUTS) -m none -Q -- `pwd`/$(HARNESS)
# 	export AFL_INST_LIBS=$(AFL_INST_LIBS); \
# directly call afl-fuzz again	
start: hook
	@echo " "
	@export AFL_QEMU_PERSISTENT_CNT=$(AFL_QEMU_PERSISTENT_CNT); \
	export AFL_QEMU_PERSISTENT_ADDR=$(shell nm $(HARNESS) | grep 'T call_fuzz_func' | awk '{print"0x"$$1}'); \
	export AFL_QEMU_PERSISTENT_GPR=$(AFL_QEMU_PERSISTENT_GPR); \
	export AFL_QEMU_PERSISTENT_MEM=$(AFL_QEMU_PERSISTENT_MEM); \
	export AFL_QEMU_PERSISTENT_EXITS=$(AFL_QEMU_PERSISTENT_EXITS); \
	export AFL_PRELOAD=$(AFL_PRELOAD); \
	export AFL_INST_LIBS=$(AFL_INST_LIBS); \
	export LD_LIBRARY_PATH=$(FUZZ_LIB_LDPATH); \
	export FUZZ_LIB_PATH=$(FUZZ_LIB_PATH); \
	export FUZZ_LIB_FUNC_NAME=$(FUZZ_LIB_FUNC_NAME); \
	afl-fuzz -i $(AFL_INPUTS) -o $(AFL_OUTPUTS) -m none -Q -- `pwd`/$(HARNESS)


hook: $(HOOK_SRC)
	@echo " "
	@gcc $(CFLAG_ARCH) -shared -fPIC -DCALL_FUZZ_FUNC $(HOOK_SRC) -o $(shell pwd)/lib/$(FUZZ_ARCH)/$(HOOK)

compile: $(HARNESS_SRC)
	@echo " "
	@gcc $(CFLAGS) -DCALL_FUZZ_FUNC $(HARNESS_SRC) -o $(HARNESS)


# directly run harness for testing
test: 
	@echo " "
	@gcc $(CFLAGS) -DTEST_FUZZ_FUNC $(HARNESS_SRC) -o $(HARNESS)
	@export LD_LIBRARY_PATH=$(FUZZ_LIB_LDPATH); \
	export FUZZ_LIB_PATH=$(FUZZ_LIB_PATH); \
	export FUZZ_LIB_FUNC_NAME=$(FUZZ_LIB_FUNC_NAME); \
	./$(HARNESS)

# trace case
trace: compile
	@if [ "$(TRACE_INPUT_CASE)" = "" ]; then\
		echo "Please Set TRACE_INPUT_CASE Env"; \
		exit 1;\
	fi
	@echo " "
	@export LD_LIBRARY_PATH=$(FUZZ_LIB_LDPATH); \
	export FUZZ_LIB_PATH=$(FUZZ_LIB_PATH); \
	export FUZZ_LIB_FUNC_NAME=$(FUZZ_LIB_FUNC_NAME); \
	afl-qemu-trace $(HARNESS) < $(TRACE_INPUT_CASE)

dry: compile
	@echo " "
	@export LD_LIBRARY_PATH=$(FUZZ_LIB_LDPATH); \
	export FUZZ_LIB_PATH=$(FUZZ_LIB_PATH); \
	export FUZZ_LIB_FUNC_NAME=$(FUZZ_LIB_FUNC_NAME); \
	./$(HARNESS)

gdb:
	@echo " "
	@export LD_LIBRARY_PATH=$(FUZZ_LIB_LDPATH); \
	export FUZZ_LIB_PATH=$(FUZZ_LIB_PATH); \
	export FUZZ_LIB_FUNC_NAME=$(FUZZ_LIB_FUNC_NAME); \
	gdb ./$(HARNESS)

clean:
	rm -rf $(HARNESS)
	rm -rf $(AFL_OUTPUTS)/*
