syntax = "proto3";

// by default it is proto2, must be the first line, no comment

//package demo; for announce namespace


// each field in message has a unique number, use to identify fields in binary format
// once message in used should not changed,smallest is 1

// https://developers.google.com/protocol-buffers/docs/proto3

/* 
You specify that message fields are one of the following:

required: a well-formed message must have exactly one of this field.
optional: a well-formed message can have zero or one of this field (but not more than one).
repeated: this field can be repeated any number of times (including zero) in a well-formed message. The order of the repeated values will be preserved.
For historical reasons, repeated fields of scalar numeric types (for example, int32, int64, enum) aren't encoded as efficiently as they could be. New code should use the special option [packed = true] to get a more efficient encoding. For example:

required string query = 1;

You then add your oneof fields to the oneof definition. You can add fields of any type, but cannot use the required, optional, or repeated keywords. If you need to add a repeated field to a oneof, you can use a message containing the repeated field.


*/

message DemoMsg {
    string sender = 1;
    int32 priority = 2;
    UserMsg usermsg = 3;
}

message UserMsg {
    enum valueType {
        MOBILE = 0;
        HOME = 1;
        WORK = 2;
    }

    valueType type = 1;

    oneof value {
        // field idx must be continuous
        string stringval=2;
        bytes bytesval=3;
    }
}